spring.application.name=demo
server.port=${PORT:8080}

spring.datasource.url=jdbc:postgresql://bpz8tu6borp3yktdaziv-postgresql.services.clever-cloud.com:50013/bpz8tu6borp3yktdaziv?sslmode=require
spring.datasource.username=u0gro4xdhbzdsfnxc2dt
spring.datasource.password=pI2QBXCYIrQLsBUND64PEOinISViHM
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

app.api.keys=dapps2-2025




# === Configuración de Kafka (PLAINTEXT) ===
spring.kafka.bootstrap-servers=34.172.179.60:9094
spring.kafka.properties.security.protocol=PLAINTEXT

# Producer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer (por si querés usar un listener)
spring.kafka.consumer.group-id=flights-catalog
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


events.kafka.enabled=true
events.http.mirror.enabled=false
events.mode=direct   # direct | ingress


events.base-url=http://34.172.179.60
events.path=/events
events.api-key=microservices-api-key-2024-secure
